@using Ext.Net.MVC
@using Ext.Net
@model PSIMP.Models.Train
@{
    Layout = null;
}
@(Html.X()
      .GridPanel()
      .EmptyText("没有培训的记录")
      .Store(Html.X().StoreFor<PSIMP.Models.Train>()
                .ID("Person_Train_Store")
                .AutoLoad(false)
                .Parameters(parameters =>
                {
                    parameters.Add(new { id = JRawValue.From("App.person_Info_Id.getValue()") });
                })
      )
      .ColumnModel(
           Html.X().ColumnFor(m => m.Id).ToBuilder<Column.Builder>().Editor(Html.X().Hidden())
           , Html.X().ColumnFor(m => m.Agency).ToBuilder<Column.Builder>().Editor(Html.X().TextField().AllowBlank(false).BlankText("请输入培训机构").MsgTarget(MessageTarget.Qtip))
           , Html.X().ColumnFor(m => m.DateTime).ToBuilder<DateColumn.Builder>().Editor(Html.X().DateField().Format("yyyy-MM-dd").Editable(false).AllowBlank(false).BlankText("请选择培训时间").MsgTarget(MessageTarget.Qtip))
           , Html.X().ColumnFor(m => m.Location).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
           , Html.X().ColumnFor(m => m.Curriculum).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
           , Html.X().ColumnFor(m => m.Certificate).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
           , Html.X().ColumnFor(m => m.CertDetails).ToBuilder<Column.Builder>().Editor(Html.X().TextArea())
           , Html.X().ColumnFor(m => m.Details).ToBuilder<Column.Builder>().Editor(Html.X().TextArea())
      )
      .TopBar(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("新增")
                            .Icon(Icon.Add)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.edu.create";
                            }),

                        Html.X().Button()
                            .ItemID("btnRemove")
                            .Text("删除")
                            .Icon(Icon.Exclamation)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.edu.del";
                            })
                    )
      )
      .BottomBar(Html.X().PagingToolbar())
      .Plugins(Html.X()
                   .RowEditing()
                   .ErrorSummary(false)
                   .SaveHandler("person.edu.validateSave")
                   .Listeners(events =>
                   {
                       events.CancelEdit.Handler = "if(e.record.phantom){e.store.remove(e.record);}";
                   })
                   .SaveBtnText("保存")
                   .CancelBtnText("取消"))
)