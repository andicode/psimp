@{
    Layout = null;
}
@model EduViewModel
@(
 Html.X().TabPanel()
        .Border(false)
        .ID("Person_Education_Tab")
        .BodyBorder(0)
        .Items(
            Html.X().GridPanel()
                .Title("教育背景")
                .ID("Person_Edu_Grid")
                .EmptyText("没有教育背景记录")
                .Store(Html.X().StoreFor(m => m.EducationalBackground).ID("Person_Edu_Store").AutoLoad(false))
                .ColumnModel(
                    Html.X().ColumnFor(m => m.EducationalBackground.ID).ToBuilder<Column.Builder>().Editor(Html.X().Hidden().Name("ID"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.SchoolName).ToBuilder<Column.Builder>().Editor(Html.X().TextField().Name("SchoolName"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.EduStartDate).ToBuilder<DateColumn.Builder>().Editor(Html.X().DateField().Name("EduStartDate"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.EduEndDate).ToBuilder<DateColumn.Builder>().Editor(Html.X().DateField().Name("EduEndDate"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.SpecialtyName).ToBuilder<Column.Builder>().Editor(Html.X().TextField().Name("SpecialtyName"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.Degree).ToBuilder<Column.Builder>().Editor(Html.X().TextField().Name("Degree"))
                    , Html.X().ColumnFor(m => m.EducationalBackground.Descriptions).ToBuilder<Column.Builder>().Editor(Html.X().TextField().Name("Descriptions"))
                )
                .TopBar(
                    Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("新增")
                            .Icon(Icon.Add)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.editGrid.create";
                            }),
                        Html.X().Button()
                            .ItemID("btnRemove")
                            .Text("删除")
                            .Icon(Icon.Exclamation)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.edu.del";
                            })
                    )
                )
                .Listeners(events => {
                    events.Activate.Handler = "App.Person_Edu_Store.reload({params:{personId:App.person_Info_Id.getValue()}});";
                })
                .Plugins(Html.X()
                             .RowEditing()
                             .ErrorSummary(false)
                             .SaveHandler("person.edu.validateSave")
                             .Listeners(events =>
                             {
                                 events.CancelEdit.Handler = "if(e.record.phantom){e.store.remove(e.record);}";
                             })
                             .SaveBtnText("保存")
                             .CancelBtnText("取消"))
           , Html.X().GridPanel()
                .Title("培训经历")
                .EmptyText("没有培训经历记录")
                .Store(Html.X().StoreFor(m => m.PersonTrainingExperience).ID("Person_Train_Store").AutoLoad(false))
                .ColumnModel(
                    Html.X().ColumnFor(m => m.PersonTrainingExperience.ID).ToBuilder<Column.Builder>().Editor(Html.X().Hidden())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.InstitutionsName).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.TrainingStartDate).ToBuilder<DateColumn.Builder>().Editor(Html.X().DateField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.TrainingEndDate).ToBuilder<DateColumn.Builder>().Editor(Html.X().DateField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.TrainingAddress).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.TrainingContent).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.GotCertificate).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
                    , Html.X().ColumnFor(m => m.PersonTrainingExperience.Descriptions).ToBuilder<Column.Builder>().Editor(Html.X().TextField())
                )
                .TopBar(
                    Html.X().Toolbar()
                    .Items(
                        Html.X().Button()
                            .Text("新增")
                            .Icon(Icon.Add)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.editGrid.create";
                            }),

                        Html.X().Button()
                            .ItemID("btnRemove")
                            .Text("删除")
                            .Icon(Icon.Exclamation)
                            .Listeners(events =>
                            {
                                events.Click.Fn = "person.train.del";
                            })
                    )
                )
                .Listeners(events => {
                    events.Activate.Handler = "App.Person_Train_Store.reload({params:{personId:App.person_Info_Id.getValue()}});";
                })
                .Plugins(Html.X()
                             .RowEditing()
                             .ErrorSummary(false)
                             .SaveHandler("person.train.validateSave")
                             .Listeners(events =>
                             {
                                 events.CancelEdit.Handler = "if(e.record.phantom){e.store.remove(e.record);}";
                             })
                             .SaveBtnText("保存")
                             .CancelBtnText("取消"))
        )
)